#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.2 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 65 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 16 #"Source Code Pro\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1           0 2412 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 177
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname part1chap"
 #"4) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t cons"
 #"tructor repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 17 3 15 #";part1chap4.rkt"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"reward"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"bronze\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")) "
0 0 19 3 8 #"\"silver\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gold\""
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"next"
0 0 24 3 1 #" "
0 0 14 3 19 #"traffic-light-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 14 3 19 #"traffic-light-state"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 14 3 19 #"traffic-light-state"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 14 3 19 #"traffic-light-state"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"reward"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";(define (create-rocket-scene.v5 h)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";    [(<= h ROCKET-CENTER-TO-BOTTOM)"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";     (place-image ROCKET 50 h MTSCN)]"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";    [(> h ROCKET-CENTER-TO-BOTTOM)"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";     (place-image ROCKET 50 ROCKET-CENTER-TO-BOTTOM MTSCN)]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";(define (create-rocket-scene.v6 h)"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";  (place-image ROCKET"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";               50"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";               (cond"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";                 [(<= h ROCKET-CENTER-TO-BOTTOM) h]"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";                 [(> h ROCKET-CENTER-TO-BOTTOM) ROCKET-CENTER-TO-BO"
 #"TTOM])"
) 0 0 24 29 1 #"\n"
0 0 17 3 23 #";               MTSCN))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; A MouseEvt is one of these strings:"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; - \"button-down\""
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; - \"button-up\""
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - \"drag\""
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - \"move\""
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; - \"enter\""
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; - \"leave\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; A TrafficLight shows one of three colors:"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; - \"red\""
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; - \"green\""
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; - \"yellow\""
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #"; interpretation each element of TrafficLight represents which color"
 #"ed"
) 0 0 24 29 1 #"\n"
0 0 17 3 29 #"; bulb is currently turned on"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; TrafficLight -> TrafficLight"
0 0 24 29 1 #"\n"
0 0 17 3 65
#"; determines the next state of the traffic light from the given s"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"traffic-light-next"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"traffic-light-next"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #") "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"traffic-light-next"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #") "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"traffic-light-next"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; LightState is a String"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; interpretation the current state of the traffic light"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"main"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 4 #"tock"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 6 #"render"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; LightState -> LightState"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; updates the state of the light"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"tock"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 18 #"traffic-light-next"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; LightState -> Image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; A 1String is a string of length 1,"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; including"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; - \"\\\\\" (the backslash),"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; - \" \" (the space bar),"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; - \"\\t\" (tab),"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; - \"\\r\" (return), and"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; - \"\\b\" (backspace)."
0 0 24 29 1 #"\n"
0 0 17 3 66
#"; interpretation represents a single letter or keyboard character."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; String -> NorF"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; converts teh given string into a number;"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; produces #false if impossible"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; a NorF is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - #false"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; - a Number"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; NorF -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; adds 3 to the given number; 3 otherwise"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add3"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; A LR (short for: launching rocket) is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; - \"resting\""
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; - non-negative number"
0 0 24 29 1 #"\n"
0 0 17 3 59
#"; intepretation \"resting\" represents a rocket on the ground"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; a number denotes the height of a rocket in flight"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; physical constants"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"YDELTA"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"XCOORD"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; graphical constants"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"BACKG"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"ROCKET"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"ROCKET-CENTER"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 6 #"ROCKET"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; A LCRD (short for: launching rocket count down) is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; - \"resting\""
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; - a number in [-3, -1]"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; - a non-negative number"
0 0 24 29 1 #"\n"
0 0 17 3 68
#"; interpretation a rocket resting on the ground, in count-down mode,"
0 0 24 29 1 #"\n"
0 0 17 3 54 #"; or the number of pixels from the top i.e. its height"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; LRCD -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; renders the state as a resting or flying rocket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"show"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 12 #"place-rocket"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 6 #"XCOORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"3/4"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"place-rocket"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"place-rocket"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; LRCD KeyEvent -> LRCD"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; starts the count-down when space bar is pressed,"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; if the rocket is still resting"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"launch"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 2 #") "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; LRCD -> LRCD"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; raises the rocket by YDELTA,"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; if it is moving already"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fly"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #") "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 6 #"YDELTA"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"show"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"resting\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 6 #"ROCKET"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 13 #"ROCKET-CENTER"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 5 #"BACKG"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"show"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"-2\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"3/4"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 6 #"ROCKET"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 13 #"ROCKET-CENTER"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 14 3 5 #"BACKG"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"show"
0 0 24 3 1 #" "
0 0 21 3 2 #"53"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 6 #"ROCKET"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"53"
0 0 24 3 1 #" "
0 0 14 3 13 #"ROCKET-CENTER"
0 0 24 3 2 #") "
0 0 14 3 5 #"BACKG"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"show"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 6 #"ROCKET"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 13 #"ROCKET-CENTER"
0 0 24 3 2 #") "
0 0 14 3 5 #"BACKG"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"show"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 6 #"ROCKET"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 13 #"ROCKET-CENTER"
0 0 24 3 2 #") "
0 0 14 3 5 #"BACKG"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Exercise 56"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #"; (string=? \"resting\" x) is incorrect because \"resting\" stands f"
 #"or any KeyEvent,"
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #"; and \"space\" starts the countdown"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #"; a Boolean expression that evaluates to #true when x belongs to the"
 #" first"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #"; subclass of LRCD would be:"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; (or (= 1 (string-length? x))"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";     (and (string? x)"
0 0 24 29 1 #"\n"
0 0 17 3 57
#";          (elem x (\"left\", \"right\", \"up, \"down\"..etc))))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; I guess that last part would be like"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; (cond [(string=? x \"left\") #true] etc..)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Exercise 57"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; LRCD -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; Takes in a height and displays the rocket, bottom centered"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"place-rocket"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 6 #"ROCKET"
0 0 24 3 1 #" "
0 0 14 3 6 #"XCOORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 13 #"ROCKET-CENTER"
0 0 24 3 2 #") "
0 0 14 3 5 #"BACKG"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"launch"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"resting\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #") "
0 0 21 3 2 #"-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"launch"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"resting\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 2 #") "
0 0 19 3 9 #"\"resting\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"launch"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #") "
0 0 21 3 2 #"-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"launch"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"launch"
0 0 24 3 1 #" "
0 0 21 3 2 #"33"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #") "
0 0 21 3 2 #"33"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"launch"
0 0 24 3 1 #" "
0 0 21 3 2 #"33"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 2 #") "
0 0 21 3 2 #"33"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; LRCD -> LRCD"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"main1"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 4 #"show"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 6 #"launch"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; LRCD -> LRCD"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; raises the rocket by YDELTA if it is moving already"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fly"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"resting\""
0 0 24 3 2 #") "
0 0 19 3 9 #"\"resting\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fly"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 2 #") "
0 0 21 3 2 #"-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fly"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fly"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #") "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fly"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 6 #"YDELTA"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fly"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 1 #" "
0 0 14 3 6 #"YDELTA"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; LRCD -> LRCD"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"main2"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 3 #"fly"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 4 #"show"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 6 #"launch"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 9 #"stop-when"
0 0 24 3 1 #" "
0 0 14 3 4 #"stop"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; LRCD -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"stop"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Exercise 59"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; rewrite using the intuitive version of height"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; LRCD -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #"; shows the position of the rocket and relevant countdown, if there "
 #"is one"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"show2"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"resting\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 13 #"place-rocket2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"show2"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"-2\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 14 3 6 #"XCOORD"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"3/4"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 13 #"place-rocket2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"show2"
0 0 24 3 1 #" "
0 0 21 3 2 #"33"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 13 #"place-rocket2"
0 0 24 3 1 #" "
0 0 21 3 2 #"33"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"show2"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 13 #"place-rocket2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 6 #"XCOORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"3/4"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 13 #"place-rocket2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 13 #"place-rocket2"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; LRCD -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; Takes in a height and displays the rocket, bottom centered"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"place-rocket2"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 6 #"ROCKET"
0 0 24 3 1 #" "
0 0 14 3 6 #"XCOORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 13 #"ROCKET-CENTER"
0 0 24 3 3 #")) "
0 0 14 3 5 #"BACKG"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; LRCD -> LRCD"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; What to do on keystroke?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"launch2"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"resting\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"f\""
0 0 24 3 2 #") "
0 0 19 3 9 #"\"resting\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"launch2"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"resting\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #") "
0 0 21 3 2 #"-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"launch2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"launch2"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"launch2"
0 0 24 3 1 #" "
0 0 21 3 2 #"34"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #") "
0 0 21 3 2 #"34"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"launch2"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 2 #") "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; LRCD -> LRCD"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; raise the rocket by YDELTA if it is moving"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fly2"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"resting\""
0 0 24 3 2 #") "
0 0 19 3 9 #"\"resting\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fly2"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 2 #") "
0 0 21 3 2 #"-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fly2"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fly2"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fly2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"YDELTA"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fly2"
0 0 24 3 1 #" "
0 0 21 3 2 #"34"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"34"
0 0 24 3 1 #" "
0 0 14 3 6 #"YDELTA"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fly2"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 6 #"YDELTA"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"main3"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 4 #"fly2"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 5 #"show2"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 7 #"launch2"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Well honestly this one seems a lot better"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; A Price falls into one of three intervals:"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; - 0 up to 1000;"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; - 1000 up to 10000;"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; - 10000 and above."
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; interpretation the price of an item"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; Price -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; computes the amount of tax charged for the price p"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"sales-tax"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"sales-tax"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"sales-tax"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.05"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"sales-tax"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.05"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"sales-tax"
0 0 24 3 1 #" "
0 0 21 3 5 #"10000"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.08"
0 0 24 3 1 #" "
0 0 21 3 5 #"10000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"sales-tax"
0 0 24 3 1 #" "
0 0 21 3 5 #"20000"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.08"
0 0 24 3 1 #" "
0 0 21 3 5 #"20000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"sales-tax"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOW-START"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 9 #"LOW-START"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 12 #"LUXURY-START"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.05"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 12 #"LUXURY-START"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.08"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; You may need more test cases than subclasses because,"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; if there is a range, you should select test cases"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; from the boundaries and also the interior"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Exercise 60"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOW-START"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"LUXURY-START"
0 0 24 3 1 #" "
0 0 21 3 5 #"10000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; TrafficLight -> TrafficLight"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #"; determines the next state of the traffic light, given current-stat"
 #"e"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"tl-next"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"tl-next"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #") "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"tl-next"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #") "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"tl-next"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; TrafficLight -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; renders the current state of the traffic light as an image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"tl-render"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #") "
0 2          17 57 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0p\0\0\0004\b"
 #"\6\0\0\0R)\2741\0\0\4\20IDATx\234\355\234\317k\36E\30"
 #"\307?O\223&\1%\247\36T\304\203\307\246\247\342U<5TQ\214\332@\241"
 #"=J\2414=\224\336=h@\320\304"
 #"\226\36\364\342\237\320b\5\301\203\267\366"
 #"T\244\25\372\343R\232\24\244\26O="
 #"x{\337\27\363\365\260\263\351k\273\373"
 #"\356\316\354d\363\16\3147<\314\276\273"
 #"3\363\335\345\223\335e\236\231\3675I"
 #"d\245\253\3\373}\2Y\335\224\1&\256\f0qe\200\211+\3L\\\263u"
 #"\a\314\354\6\360n\217\347\222U\257\e"
 #"\222\336\253:`u\303\b3\313\343\213)\222$\253\332_{\a65\314\352G"
 #"M7R~\a&\256\f0qe\200\211+\3L\\\31`\342\312\0\23W\6"
 #"\230\270\366\6\240\331\"f?`\366\27fC\314v\\\f1{\202\331\367\230-"
 #"\356\201\361<\330i\260k`[`\317\\l\201]\5;U\324\211\354\212\315\e"
 #"v\332\260k\206m\31\366\314\305\226aW\r;e{\340\v\200\244\312\0T\34"
 #"\256>^\e\260)\30\t\324\20#\301"
 #"\267\336\375\327\6\253\22\217[T\335\226"
 #"\370,\226/b\25\361\0305\376m\23"
 #"\340\333\304!\36@\230\23\374\321\2\334"
 #"\213qG0\327\1\334\214\304\345\261]\367$.H,I\34rq\304\355\273?"
 #"V\357R\3216\30\334\f\342\362\30\240"
 #"{\210\v\210%\304!\27G\334\276\373"
 #"c\365.\341\341\333'\300\20xe\334\356\0p\303m\16$\326&CaF\342"
 #"\274\304\320\355\n~\2 6\34\220\1bm\22\24\a\373<b\350\332\264\366\355"
 #"\a |\335\1^\31_\5\300[\31\203w\314\243\335\262k\263#\361"
 #"Q\0\274\2251x\255}\21\313\256\315\16-}\367\36 ,\266|\347"
) 500
(
 #"5\305P\360\252\a\2049\211G\356\343"
 #"\231\0\370g\335\346C\211\203\36\20\346\20\217\34@o_\304Y\327\366!-|"
 #"\373\0x%\2\2742\276\363\0p\322m\336\2258\20\0pF\342\201\373\270\352"
 #"\1\340\244\3p\227\0_\3678}\340\372h\364m\342\20c\30\361q\204>J"
 #"}\342Qw\305\225?\202v\374\255\364"
 #"o\321\366\177}y\371*\300W\341\276"
 #"\225\212\1\360\365\b}\224z\303\243\356"
 #"QW\376\326\301\257l{tb\255\351"
 #"\360\255T\f\200\215\223\302\36:\350Q"
 #"\3675W>\351\340\367\247+}\376q\366\313\267R1\0\356\327\214}y\356\1"
 #"\217\317]\311\225>\327\260_\276\225\212"
 #"\1p\30\241\217R#\217\272O]\371"
 #"V\a\277\262\355\323\211\265\246\303\267R"
 #"1\0\376\35\241\217R>\27t\307\225"
 #"\307:\370-\273\362v\2\276\225\212\1"
 #"\360\347\b}\224\372\311\243\356uW~\16\26p\0356\v\234y\241//_\v"
 #"\360\265p\337jE\30\a\276\342\6\341"
 #"]\307\200\3\301\202\3078\256\353@\376"
 #"\242\333\354{ \177q\272\6\362\5\304"
 #"\30\251\264/\3 \204\246\322\216K\214"
 #"T\244\322>\f\200\20\232J;\216\30\271TZ+\337~\0\26\20ou\200w"
 #"\323\37\336.\214\3151\210\347\324\234\314"
 #"^\323\363dv@\376u\27\306\346\30\304s-\222\331kc\311\354\326\276}\2"
 #"\f\235N\272%\230\355\0\260n:\351"
 #"\260\304\202\213%\275<\235\264.\25+\323\3\1\326M'\35F,\270X\252\230"
 #"NZ\307\303\267?\200\317An\250\375\204\3567\341\340^\2yB\355't?"
 #"\215\345\2138A\373\t]o\337&\16"
 #"\215\337\215P\310\322\372b\271\304:\360\1\360&P.'\30Pd0~\1\276"
 #"@\372\307\273\357\311\306\363\24\371\324\367\201w\200\267\335"
 #"\201m\340w\340W\340:h\20\325\265\245\257\2|\233"
) 97
(
 #"8\354\r\300\254hj\342\220W\245%\256\f0qe\200\211+\3L\\\31`"
 #"\342\312\0\23W\6\230\270\32\227C\344\37;\230nM\272\3o\366v\26YM"
 #"\252eQ\233\211\311JC\371\35\230\2702\300\304\225\1&\256\f0qe"
 #"\200\211\353?O~\374\302\324\347\342d\0\0\0\0IEND\256B`\202"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"tl-render"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #") "
0 2          17 57 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0p\0\0\0004\b"
 #"\6\0\0\0R)\2741\0\0\4\36IDATx\234\355\234\275\213TW\30"
 #"\207\237\327]w\27\f[Y$!\244\260t\255$mH\345bB\202k\342\202"
 #"\240e\20\304\265\20\373\24\311B \331"
 #"\215\222\"i\374\23\24\r\4R\244\323JD\5?\32qW\bFRY\244\233"
 #"\31\262\277\24\363\216^\307{\347\336s"
 #"\357\235\231=p\236\345\345\300\334\3631"
 #"\357}\2703\234\217Y\223D\"^\366L\373\r$\232\221\4FN\22\309I"
 #"`\344$\201\2213[t\301\314n\2\37O\360\275$\212\271)\351\223\274\vV"
 #"4\2150\2634\277\330EH\262\274\327"
 #"\v\237\300\262\206\211\311P\366 \245\357"
 #"\300\310I\2#'\t\214\234$0r\222\300\310I\2#'\t\214\234\361\b4"
 #"\233\307\3544f\3270\333\302\354\245\307"
 #"\26fW1;\205\331\374\30\6^\4\373\25\354o\260.\330\216G\27\3549\330"
 #"/\375:-\217\212\315\ev\332\260k"
 #"\206m\31\366\322c\313\260\253\206\2352\306\221/ )7\0\365/\347_/\f"
 #"X\25<\23\250$\266\5_\5\367_\30lJ\364*T\355I\374\330\326\270\210"
 #"U\3043T\372\267\215\302\363-\363\320\236@\230\21\\\316\bz(\270 X\22"
 #"\354\3678\344\257=\312\324\273$\230i"
 #" nN\342~\215\246\367\372mk\213\233A\\\316\bz\210\270\200XB\354\367"
 #"8\344\257=\312\324\273\204\252\347;I"
 #"\201\e.\244#X\e)\245/\373\274\240\353m\32<\21\265\344\r\342n\3\201"
 #"\e.\244\203X\e%\305e\237Gt\275M\345|'#\20V2\362\216\4H"
 #"_\3666;\202/j\310\373\276\201\274A|WC\336JF^\345"
 #"|\21\313\336f\aU\313w\374\2aN\360\324\5\236\t\276\203p"
) 500
(
 #"\326\333>\21\354\r\220\267\250j\337y"
 #"e\321\225x'@\302\34\342\251\v\f\316\27q\326\333>A\345\371NB\340I"
 #"\27\360@\260\247\206\300\31\301c\357c5@\340\317-\310\e\304O\1\2N\272"
 #"\200\a(<_\3778}\354}\224\346[\346\241\215i\304\212\227W\220v\202["
 #"K\377\1W\206\372\252\302\261\340\261\2129\36P\367U\276\"<_Q;\337\\"
 #"\332\20x\330\313?\e\3641h{xd\2557y\257\301x\303\274\37PwZ"
 #"\371\346\322\206\300w\275|\336\240\217\277"
 #"\274\f\271\221\245\233\321\1\354\r\250;"
 #"\255|siC\340\240\217\360\217\317\327\fv\235Cv\377\247uR`Z\371\346"
 #"\322\206\300\27^~\330\240\217A\333\27"
 #"#k\275I\267\301x\303\364\2\352N+\337\\\332\20x\317\313#\r\372X\366"
 #"\362n@\233\177\32\2147L\310\215\234"
 #"V\276\271\264!\360\206\227_c\26\336\237\331,pf\250\257*\374\26<V1"
 #"\327\3\352\276\312\327\b\317\327\250\235o"
 #">-\314\3\233N\344/\326\234\310\357"
 #"S\177\22\336t\16\330\221X\b\230\307"
 #"5\235\310_\334]\23\371\276\204\272KiG\5=_J\373<\374\356\267\262\224"
 #"\366m\r\tu\227\322\216\"z\276\224V)\337\311\b\354\313\330\314H<Wa"
 #"1{-\263\230\35\274\36\231\221x\273\201\274[u\e\"63\22\317UX\314"
 #"^\313,fW\316w\222\2\213\266\223"
 #"\16\n\26<\226\364\366v\322\272\374\204xM\201u\267\223nK\3146\20X\264"
 #"\235t\20\261\340\261\224\263\235\264\216\252"
 #"\347;9\201\257E\236P\365\r\335/"
 #"\353\213{K\344\206\252o\350\376\320\326"
 #"\270\210\23T\337\320\r\316\267\314C\351"
 #"o#T\347h}\377\270\304q\340S\340#\340\200_\331\6\356\0\177"
 #"\0007\220:\301}\217\36x\21X\a>\3>\0\6\307\30:\364W"
) 111
(
 #"N~\a\276\1\375\333\352\250T\313W\204\347[\346a<\2\23\255Q\346!\235"
 #"J\213\234$0r\222\300\310I\2#'\t\214\234$0r\222\300\310)=\226"
 #"\220\376\331\301\356f\324\23xkb\357"
 #"\"QF\241\213\302\225\230D\34\244\357\300\310I\2#'\t\214\234$0r"
 #"\222\300\310\371\37J7B\215\356\207\243h\0\0\0\0IEND\256B`\202"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"tl-render"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #") "
0 2          17 57 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0p\0\0\0004\b"
 #"\6\0\0\0R)\2741\0\0\4\4IDATx\234\355\234\317\213\24G\30"
 #"\206\237\317Yw\27\22\366\344!\t\301\203G\327\223\344\32rr1!!\253q"
 #"A\320c\20\304\365 \336sH\26\2\311n\24\17\311\305?A\211\201@\16\271"
 #"\351I\202\n\376\270\210\273B0\222\223"
 #"\207\334f\206\354\233C\327\304f\234\236"
 #"\356\252\352\335\355\202z\213\242z\272\253"
 #"\276w\226gz\232\372\252fM\22Y\351j\337^\277\201\2548e\200\211+\3"
 #"L\\\31`\342\312\0\23\327L\325\0053\273\r|\270\213\357%\253Z\267%}"
 #"4\351\202UM#\314,\317/:$I6\351|\345\35X70kwTw"
 #"#\345g`\342\312\0\23W\6\230\2702\300\304\225\1&\256\f0qe\200\211"
 #"kg\0\232\315av\26\263\233\230mb\366\312\325M\314n`v\6\263\271\35"
 #"0\236\3;\vv\23l\23\354\225\253\233`7\300\316\24}Zv\305\26\f\373"
 #"\311\260\277\f\e\30\266\355\352\300\260\27"
 #"\206\375h\330B\333\276\0H\232X\1\25\227'_\257\254\260\"x.PM\335"
 #"\22|\341\35\277\262\262\"\361\274A\327"
 #"-\251=_\304\6b\210j\313\20\361"
 #"\275w\374\32\16\355\1\204\236\340j\t"
 #"\320#\301%\301\242\340\200\253G\334\271"
 #"\307\245~W\4\275\bp=\211\253\245S\217$.I,J\34p\365\210;\367"
 #"\270\324\357J16\30\334,\342A\3p\343\345>b\266\213\0\327\35\220\276`"
 #"u*\224\2\366E\301\300\215\361\376d"
 #"\226\0\256\273\303\276\304\352t(\364$.J\f\334\251`\337@x\243r\257["
 #"\0a\271\4\357\230\a\364%7f[\360Y\0\274\345\22\274\346\276"
 #"b\311\215\331\226\374}\21\337F\300\e\225o\272\1\20f\5\317\34"
) 500
(
 #"\300s\336\20\340\274\e\373T\260\337\3"
 #"\302\254\3043\367\322\337W\234w\207O"
 #"\245\346\276\210\205\206\317\274\2722@\274"
 #"\335\5\200\247\35\200\207\202}\1\0{"
 #"\202'.\306\212\a\200\323\356\360\241\24"
 #"\340[|\235>q/\e\373\"\256\265\0oT~\210\5\330\3064b\331\265\327"
 #"\221\266\275GK\377\2\327\307b\371\371"
 #"\22\340K\260\357\347\376^\225:\21\e"
 #"\240\r\200G]\373{D\214\321\330\243"
 #"S{u\303\367\335\b\277q\275\27\e"
 #"\240\r\200\357\270\366ED\214?]\353"
 #"\363\a\355\225o\355\"\270\207\366\307\6"
 #"h\3\340(F\300\327\330\377\32\255:"
 #"\373\254\376\357\225o\247v(\264\1\360\245k\17F\304\30\215}9\265W7|"
 #"\a\21~\343\32\306\6h\3\340}\327"
 #"\36\213\210\261\344\332{\t\370\376\35\341"
 #"7.\237\17\316D\265\1\360\226k\277\304\314?\236\331\fpn,\226\237/\1"
 #"\276\4\373\376\342\357U\251\237\243#\264"
 #"0\17\214\235\310_\336\243\211\374ew\350;\221\177\313M\302cK\0371\37;"
 #"\17\214\aX@\bM\245\35\27\f]*\355\323\0\b\241\251\264\343\22C\25\251"
 #"4o_\332I\245}\335\310k\27\223\331\e%\210\27\32$\263WK\311\354F"
 #"y\301\n\30\e%\210\27T\237\314^\325\353dv\260/\342n\4\274;\215}"
 #":\260\234tX0\357\352\342\204\345\244"
 #"5\271\35\342\201\0\253\226\223\16K\314"
 #"\273\272\2507\227\223\326\244p_\302\227"
 #"\223\356\"f\272\a\3605\310Sj\276\240{2\34\334\e O\251\371\202nk"
 #"\276\210u\232/\350~\347\35\277\206C"
 #"\355o#\24\262\265\276\330.q\2\370"
 #"\30\370\08\344\256l\1\177\0\277\1"
 #"\267\220\372\336\261\247\e7\363\245]_\267]b\r\370\4x\37\30m\333\350"
 #"Sd\212~\5\276\22\372\307;v\r\207\235\1\230\325\232\3528\344]i\211"
) 85
(
 #"+\3L\\\31`\342\312\0\23W\6\230\2702\300\304\225\1&\256\332\355\1\371"
 #"\237\35t[\323\356\300;\273\366.\262"
 #"\352T\311\2422\23\223\225\206\36230qe\200\211+\3L\\\31`\342\312"
 #"\0\23\327\177\34R\374\302\v\351\353\261\0\0\0\0IEND\256B`\202"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"tl-render"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #") "
0 2          17 57 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0p\0\0\0004\b"
 #"\6\0\0\0R)\2741\0\0\4\20IDATx\234\355\234\317k\36E\30"
 #"\307?O\223&\1%\247\36T\304\203\307\246\247\342U<5TQ\214\332@\241"
 #"=J\2414=\224\336=h@\320\304"
 #"\226\36\364\342\237\320b\5\301\203\267\366"
 #"T\244\25\372\343R\232\24\244\26O="
 #"x{\337\27\363\365\260\263\351k\273\373"
 #"\356\316\354d\363\16\3147<\314\276\273"
 #"3\363\335\345\223\335e\236\231\3675I"
 #"d\245\253\3\373}\2Y\335\224\1&\256\f0qe\200\211+\3L\\\263u"
 #"\a\314\354\6\360n\217\347\222U\257\e"
 #"\222\336\253:`u\303\b3\313\343\213)\222$\253\332_{\a65\314\352G"
 #"M7R~\a&\256\f0qe\200\211+\3L\\\31`\342\312\0\23W\6"
 #"\230\270\366\6\240\331\"f?`\366\27fC\314v\\\f1{\202\331\367\230-"
 #"\356\201\361<\330i\260k`[`\317\\l\201]\5;U\324\211\354\212\315\e"
 #"v\332\260k\206m\31\366\314\305\226aW\r;e{\340\v\200\244\312\0T\34"
 #"\256>^\e\260)\30\t\324\20#\301"
 #"\267\336\375\327\6\253\22\217[T\335\226"
 #"\370,\226/b\25\361\0305\376m\23"
 #"\340\333\304!\36@\230\23\374\321\2\334"
 #"\213qG0\327\1\334\214\304\345\261]\367$.H,I\34rq\304\355\273?"
 #"V\357R\3216\30\334\f\342\362\30\240"
 #"{\210\v\210%\304!\27G\334\276\373"
 #"c\365.\341\341\333'\300\20xe\334\356\0p\303m\16$\326&CaF\342"
 #"\274\304\320\355\n~\2 6\34\220\1bm\22\24\a\373<b\350\332\264\366\355"
 #"\a |\335\1^\31_\5\300[\31\203w\314\243\335\262k\263#\361"
 #"Q\0\274\2251x\255}\21\313\256\315\16-}\367\36 ,\266|\347"
) 500
(
 #"5\305P\360\252\a\2049\211G\356\343"
 #"\231\0\370g\335\346C\211\203\36\20\346\20\217\34@o_\304Y\327\366!-|"
 #"\373\0x%\2\2742\276\363\0p\322m\336\2258\20\0pF\342\201\373\270\352"
 #"\1\340\244\3p\227\0_\3678}\340\372h\364m\342\20c\30\361q\204>J"
 #"}\342Qw\305\225?\202v\374\255\364"
 #"o\321\366\177}y\371*\300W\341\276"
 #"\225\212\1\360\365\b}\224z\303\243\356"
 #"QW\376\326\301\257l{tb\255\351"
 #"\360\255T\f\200\215\223\302\36:\350Q"
 #"\3675W>\351\340\367\247+}\376q\366\313\267R1\0\356\327\214}y\356\1"
 #"\217\317]\311\225>\327\260_\276\225\212"
 #"\1p\30\241\217R#\217\272O]\371"
 #"V\a\277\262\355\323\211\265\246\303\267R"
 #"1\0\376\35\241\217R>\27t\307\225"
 #"\307:\370-\273\362v\2\276\225\212\1"
 #"\360\347\b}\224\372\311\243\356uW~\16\26p\0356\v\234y\241//_\v"
 #"\360\265p\337jE\30\a\276\342\6\341"
 #"]\307\200\3\301\202\3078\256\353@\376"
 #"\242\333\354{ \177q\272\6\362\5\304"
 #"\30\251\264/\3 \204\246\322\216K\214"
 #"T\244\322>\f\200\20\232J;\216\30\271TZ+\337~\0\26\20ou\200w"
 #"\323\37\336.\214\3151\210\347\324\234\314"
 #"^\323\363dv@\376u\27\306\346\30\304s-\222\331kc\311\354\326\276}\2"
 #"\f\235N\272%\230\355\0\260n:\351"
 #"\260\304\202\213%\275<\235\264.\25+\323\3\1\326M'\35F,\270X\252\230"
 #"NZ\307\303\267?\200\317An\250\375\204\3567\341\340^\2yB\355't?"
 #"\215\345\2138A\373\t]o\337&\16"
 #"\215\337\215P\310\322\372b\271\304:\360\1\360&P.'\30Pd0~\1\276"
 #"@\372\307\273\357\311\306\363\24\371\324\367\201w\200\267\335"
 #"\201m\340w\340W\340:h\20\325\265\245\257\2|\233"
) 97
(
 #"8\354\r\300\254hj\342\220W\245%\256\f0qe\200\211+\3L\\\31`"
 #"\342\312\0\23W\6\230\270\32\227C\344\37;\230nM\272\3o\366v\26YM"
 #"\252eQ\233\211\311JC\371\35\230\2702\300\304\225\1&\256\f0qe"
 #"\200\211\353?O~\374\302\324\347\342d\0\0\0\0IEND\256B`\202"
) 0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #") "
0 2          17 57 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0p\0\0\0004\b"
 #"\6\0\0\0R)\2741\0\0\4\36IDATx\234\355\234\275\213TW\30"
 #"\207\237\327]w\27\f[Y$!\244\260t\255$mH\345bB\202k\342\202"
 #"\240e\20\304\265\20\373\24\311B \331"
 #"\215\222\"i\374\23\24\r\4R\244\323JD\5?\32qW\bFRY\244\233"
 #"\31\262\277\24\363\216^\307{\347\336s"
 #"\357\235\231=p\236\345\345\300\334\3631"
 #"\357}\2703\234\217Y\223D\"^\366L\373\r$\232\221\4FN\22\309I"
 #"`\344$\201\2213[t\301\314n\2\37O\360\275$\212\271)\351\223\274\vV"
 #"4\2150\2634\277\330EH\262\274\327"
 #"\v\237\300\262\206\211\311P\366 \245\357"
 #"\300\310I\2#'\t\214\234$0r\222\300\310I\2#'\t\214\234\361\b4"
 #"\233\307\3544f\3270\333\302\354\245\307"
 #"\26fW1;\205\331\374\30\6^\4\373\25\354o\260.\330\216G\27\3549\330"
 #"/\375:-\217\212\315\ev\332\260k"
 #"\206m\31\366\322c\313\260\253\206\2352\306\221/ )7\0\365/\347_/\f"
 #"X\25<\23\250$\266\5_\5\367_\30lJ\364*T\355I\374\330\326\270\210"
 #"U\3043T\372\267\215\302\363-\363\320\236@\230\21\\\316\bz(\270 X\22"
 #"\354\3678\344\257=\312\324\273$\230i"
 #" nN\342~\215\246\367\372mk\213\233A\\\316\bz\210\270\200XB\354\367"
 #"8\344\257=\312\324\273\204\252\347;I"
 #"\201\e.\244#X\e)\245/\373\274\240\353m\32<\21\265\344\r\342n\3\201"
 #"\e.\244\203X\e%\305e\237Gt\275M\345|'#\20V2\362\216\4H"
 #"_\3666;\202/j\310\373\276\201\274A|WC\336JF^\345"
 #"|\21\313\336f\aU\313w\374\2aN\360\324\5\236\t\276\203p"
) 500
(
 #"\326\333>\21\354\r\220\267\250j\337y"
 #"e\321\225x'@\302\34\342\251\v\f\316\27q\326\333>A\345\371NB\340I"
 #"\27\360@\260\247\206\300\31\301c\357c5@\340\317-\310\e\304O\1\2N\272"
 #"\200\a(<_\3778}\354}\224\346[\346\241\215i\304\212\227W\220v\202["
 #"K\377\1W\206\372\252\302\261\340\261\2129\36P\367U\276\"<_Q;\337\\"
 #"\332\20x\330\313?\e\3641h{xd\2557y\257\301x\303\274\37PwZ"
 #"\371\346\322\206\300w\275|\336\240\217\277"
 #"\274\f\271\221\245\233\321\1\354\r\250;"
 #"\255|siC\340\240\217\360\217\317\327\fv\235Cv\377\247uR`Z\371\346"
 #"\322\206\300\27^~\330\240\217A\333\27"
 #"#k\275I\267\301x\303\364\2\352N+\337\\\332\20x\317\313#\r\372X\366"
 #"\362n@\233\177\32\2147L\310\215\234"
 #"V\276\271\264!\360\206\227_c\26\336\237\331,pf\250\257*\374\26<V1"
 #"\327\3\352\276\312\327\b\317\327\250\235o"
 #">-\314\3\233N\344/\326\234\310\357"
 #"S\177\22\336t\16\330\221X\b\230\307"
 #"5\235\310_\334]\23\371\276\204\272KiG\5=_J\373<\374\356\267\262\224"
 #"\366m\r\tu\227\322\216\"z\276\224V)\337\311\b\354\313\330\314H<Wa"
 #"1{-\263\230\35\274\36\231\221x\273\201\274[u\e\"63\22\317UX\314"
 #"^\313,fW\316w\222\2\213\266\223"
 #"\16\n\26<\226\364\366v\322\272\374\204xM\201u\267\223nK\3146\20X\264"
 #"\235t\20\261\340\261\224\263\235\264\216\252"
 #"\347;9\201\257E\236P\365\r\335/"
 #"\353\213{K\344\206\252o\350\376\320\326"
 #"\270\210\23T\337\320\r\316\267\314C\351"
 #"o#T\347h}\377\270\304q\340S\340#\340\200_\331\6\356\0\177"
 #"\0007\220:\301}\217\36x\21X\a>\3>\0\6\307\30:\364W"
) 111
(
 #"N~\a\276\1\375\333\352\250T\313W\204\347[\346a<\2\23\255Q\346!\235"
 #"J\213\234$0r\222\300\310I\2#'\t\214\234$0r\222\300\310)=\226"
 #"\220\376\331\301\356f\324\23xkb\357"
 #"\"QF\241\213\302\225\230D\34\244\357\300\310I\2#'\t\214\234$0r"
 #"\222\300\310\371\37J7B\215\356\207\243h\0\0\0\0IEND\256B`\202"
) 0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 2 #") "
0 2          17 57 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0p\0\0\0004\b"
 #"\6\0\0\0R)\2741\0\0\4\4IDATx\234\355\234\317\213\24G\30"
 #"\206\237\317Yw\27\22\366\344!\t\301\203G\327\223\344\32rr1!!\253q"
 #"A\320c\20\304\365 \336sH\26\2\311n\24\17\311\305?A\211\201@\16\271"
 #"\351I\202\n\376\270\210\273B0\222\223"
 #"\207\334f\206\354\233C\327\304f\234\236"
 #"\356\252\352\335\355\202z\213\242z\272\253"
 #"\276w\226gz\232\372\252fM\22Y\351j\337^\277\201\2548e\200\211+\3"
 #"L\\\31`\342\312\0\23\327L\325\0053\273\r|\270\213\357%\253Z\267%}"
 #"4\351\202UM#\314,\317/:$I6\351|\345\35X70kwTw"
 #"#\345g`\342\312\0\23W\6\230\2702\300\304\225\1&\256\f0qe\200\211"
 #"kg\0\232\315av\26\263\233\230mb\366\312\325M\314n`v\6\263\271\35"
 #"0\236\3;\vv\23l\23\354\225\253\233`7\300\316\24}Zv\305\26\f\373"
 #"\311\260\277\f\e\30\266\355\352\300\260\27"
 #"\206\375h\330B\333\276\0H\232X\1\25\227'_\257\254\260\"x.PM\335"
 #"\22|\341\35\277\262\262\"\361\274A\327"
 #"-\251=_\304\6b\210j\313\20\361"
 #"\275w\374\32\16\355\1\204\236\340j\t"
 #"\320#\301%\301\242\340\200\253G\334\271"
 #"\307\245~W\4\275\bp=\211\253\245S\217$.I,J\34p\365\210;\367"
 #"\270\324\357J16\30\334,\342A\3p\343\345>b\266\213\0\327\35\220\276`"
 #"u*\224\2\366E\301\300\215\361\376d"
 #"\226\0\256\273\303\276\304\352t(\364$.J\f\334\251`\337@x\243r\257["
 #"\0a\271\4\357\230\a\364%7f[\360Y\0\274\345\22\274\346\276"
 #"b\311\215\331\226\374}\21\337F\300\e\225o\272\1\20f\5\317\34"
) 500
(
 #"\300s\336\20\340\274\e\373T\260\337\3"
 #"\302\254\3043\367\322\337W\234w\207O"
 #"\245\346\276\210\205\206\317\274\2722@\274"
 #"\335\5\200\247\35\200\207\202}\1\0{"
 #"\202'.\306\212\a\200\323\356\360\241\24"
 #"\340[|\235>q/\e\373\"\256\265\0oT~\210\5\330\3064b\331\265\327"
 #"\221\266\275GK\377\2\327\307b\371\371"
 #"\22\340K\260\357\347\376^\225:\21\e"
 #"\240\r\200G]\373{D\214\321\330\243"
 #"S{u\303\367\335\b\277q\275\27\e"
 #"\240\r\200\357\270\366ED\214?]\353"
 #"\363\a\355\225o\355\"\270\207\366\307\6"
 #"h\3\340(F\300\327\330\377\32\255:"
 #"\373\254\376\357\225o\247v(\264\1\360\245k\17F\304\30\215}9\265W7|"
 #"\a\21~\343\32\306\6h\3\340}\327"
 #"\36\213\210\261\344\332{\t\370\376\35\341"
 #"7.\237\17\316D\265\1\360\226k\277\304\314?\236\331\fpn,\226\237/\1"
 #"\276\4\373\376\342\357U\251\237\243#\264"
 #"0\17\214\235\310_\336\243\211\374ew\350;\221\177\313M\302cK\0371\37;"
 #"\17\214\aX@\bM\245\35\27\f]*\355\323\0\b\241\251\264\343\22C\25\251"
 #"4o_\332I\245}\335\310k\27\223\331\e%\210\27\32$\263WK\311\354F"
 #"y\301\n\30\e%\210\27T\237\314^\325\353dv\260/\342n\4\274;\215}"
 #":\260\234tX0\357\352\342\204\345\244"
 #"5\271\35\342\201\0\253\226\223\16K\314"
 #"\273\272\2507\227\223\326\244p_\302\227"
 #"\223\356\"f\272\a\3605\310Sj\276\240{2\34\334\e O\251\371\202nk"
 #"\276\210u\232/\350~\347\35\277\206C"
 #"\355o#\24\262\265\276\330.q\2\370"
 #"\30\370\08\344\256l\1\177\0\277\1"
 #"\267\220\372\336\261\247\e7\363\245]_\267]b\r\370\4x\37\30m\333\350"
 #"Sd\212~\5\276\22\372\307;v\r\207\235\1\230\325\232\3528\344]i\211"
) 85
(
 #"+\3L\\\31`\342\312\0\23W\6\230\2702\300\304\225\1&\256\332\355\1\371"
 #"\237\35t[\323\356\300;\273\366.\262"
 #"\352T\311\2422\23\223\225\206\36230qe\200\211+\3L\\\31`\342\312"
 #"\0\23\327\177\34R\374\302\v\351\353\261\0\0\0\0IEND\256B`\202"
) 0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; TrafficLight -> Traffic-Light"
0 0 24 29 1 #"\n"
0 0 17 3 61
#"; simulates a traffic light that changes with each clock tick"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 24 #"traffic-light-simulation"
0 0 24 3 1 #" "
0 0 14 3 13 #"initial-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 13 #"initial-state"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 9 #"tl-render"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 7 #"tl-next"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Exercise 62"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; A N-TrafficLight shows one of three colors:"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; - 0, 1, 2"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; interpretation 0 means red, 1 green, and 2 yellow"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; N-TrafficLight -> N-TrafficLight"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #"; determines the next state of the traffic light, given current-stat"
 #"e"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"tl-next-numeric"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"tl-next-numeric"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"tl-next-numeric"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"tl-next-numeric"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"modulo"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-state"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #"; Yes, I think it is clearer as the colors match directly. Numeric i"
 #"s an odd mapping"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #"; interpretation is required in such a case"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Exercise 63"
0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #"; The version on the right. And yes, redefining the constants still "
 #"works in that case"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; A DoorState is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; - \"locked\""
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; - \"closed\""
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - \"open\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; DoorState -> DoorState"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; closes an open door over the period of one tick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"door-closer"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"locked\""
0 0 24 3 2 #") "
0 0 19 3 8 #"\"locked\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"door-closer"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"closed\""
0 0 24 3 2 #") "
0 0 19 3 8 #"\"closed\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"door-closer"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"open\""
0 0 24 3 2 #") "
0 0 19 3 8 #"\"closed\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"door-closer"
0 0 24 3 1 #" "
0 0 14 3 13 #"state-of-door"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"locked\""
0 0 24 3 1 #" "
0 0 14 3 13 #"state-of-door"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"locked\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"closed\""
0 0 24 3 1 #" "
0 0 14 3 13 #"state-of-door"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"closed\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"open\""
0 0 24 3 1 #" "
0 0 14 3 13 #"state-of-door"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"closed\""
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; DoorState KeyEvent -> DoorState"
0 0 24 29 1 #"\n"
0 0 17 3 65
#"; simulates the actions on the door via three kinds of key events"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"door-actions"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"locked\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"u\""
0 0 24 3 2 #") "
0 0 19 3 8 #"\"closed\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"door-actions"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"closed\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 24 3 2 #") "
0 0 19 3 8 #"\"locked\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"door-actions"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"closed\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"open\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"door-actions"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"open\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"open\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"door-actions"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"closed\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 2 #") "
0 0 19 3 8 #"\"closed\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"door-actions"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"locked\""
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"u\""
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #")) "
0 0 19 3 8 #"\"closed\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"closed\""
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #")) "
0 0 19 3 8 #"\"locked\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"closed\""
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #")) "
0 0 19 3 6 #"\"open\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; DoorState -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; translates the current state of the door into a large text"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"door-render"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"closed\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"closed\""
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"door-render"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; DoorState -> DoorState"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; simulates a door with an automatic door closer"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"door-simulation"
0 0 24 3 1 #" "
0 0 14 3 13 #"initial-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 13 #"initial-state"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 11 #"door-closer"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 12 #"door-actions"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 11 #"door-render"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0           0
